use ema;

CREATE DATABASE IF NOT EXISTS MERCADO_SCRIPT;
USE MERCADO_SCRIPT;

CREATE TABLE IF NOT EXISTS CLIENTES (
    ID_CLIENTE INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    nombre_cliente VARCHAR(30) NOT NULL,
    telefono VARCHAR(10) UNIQUE,
    direccion VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS PRODUCTOS (
    ID_PRODUCTO INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(30) NOT NULL,
    precio FLOAT NOT NULL,
    descripcion_producto VARCHAR(100),
	foto_producto VARCHAR(80) NOT NULL DEFAULT 'imagen-generica.jpg',
    Peso VARCHAR(10) NOT NULL
);


CREATE TABLE IF NOT EXISTS FACTURAS (
    ID_FACTURA INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
    Precio FLOAT NOT NULL,
    Costo_envio FLOAT NOT NULL,
    ID_DELIVERY INT NOT NULL,
    Descuento FLOAT NOT NULL,
    Total FLOAT NOT NULL,
      FOREIGN KEY (ID_CLIENTE)
        REFERENCES CLIENTES(ID_CLIENTE)
        ON DELETE CASCADE
        ON UPDATE CASCADE
    );
    
    CREATE TABLE IF NOT EXISTS PROVEEDORES (
    ID_PROVEEDOR INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    ID_CLIENTE INT NOT NULL,
    Nombre VARCHAR(40) NOT NULL,
    Telefono INT NULL UNIQUE,
    Direccion VARCHAR(50) NOT NULL UNIQUE,
    FOREIGN KEY (ID_CLIENTE)
    REFERENCES CLIENTES(ID_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    );
    
        CREATE TABLE IF NOT EXISTS STOCK (
   ID_STOCK INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   ID_PROVEEDOR INT NOT NULL,
   ID_PRODUCTO INT NOT NULL,
    Nombre_del_producto VARCHAR(40) NOT NULL,
    Cantidad INT NOT NULL,
    Medida VARCHAR(256) NOT NULL,
    Stock_minimo FLOAT NOT NULL,
      FOREIGN KEY (ID_PROVEEDOR)
        REFERENCES PROVEEDORES(ID_PROVEEDOR)
        ON DELETE CASCADE
        ON UPDATE CASCADE,
    FOREIGN KEY (ID_PRODUCTO)
        REFERENCES PRODUCTOS(ID_PRODUCTO)
        ON DELETE CASCADE
        ON UPDATE CASCADE
    );
    
    CREATE TABLE IF NOT EXISTS INGREDIENTES (
    ID_INGREDIENTES INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    ID_PRODUCTO INT NOT NULL,
    Cantidad FLOAT NOT NULL,
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTOS(ID_PRODUCTO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
    );
    
    CREATE TABLE IF NOT EXISTS COMPRA (
    Numero_de_compra INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
    ID_PROVEEDOR INT NOT NULL UNIQUE,
    ID_PRODUCTO INT NOT NULL UNIQUE,
    Cantidad_de_compra INT NOT NULL,
    FOREIGN KEY (ID_PROVEEDOR)
    REFERENCES PROVEEDORES(ID_PROVEEDOR)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (ID_PRODUCTO)
    REFERENCES PRODUCTOS(ID_PRODUCTO)
    ON DELETE CASCADE
    ON UPDATE CASCADE
        );
        
   CREATE TABLE IF NOT EXISTS DELIVERYS (
   ID_DELIVERY INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   Nombre VARCHAR(30) NOT NULL,
   Apellido VARCHAR(30) NOT NULL,
   Email VARCHAR(30) NULL UNIQUE,
   Telefono INT NULL UNIQUE,
   Direccion VARCHAR(50) NULL UNIQUE,
   Vehiculo INT NULL UNIQUE,
   Patente INT NULL UNIQUE
   );
   
   CREATE TABLE IF NOT EXISTS METODO_DE_PAGO (
   ID_METODOPAGO INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   Forma_de_pago VARCHAR(50) NOT NULL,
   Entidad VARCHAR(50) NOT NULL UNIQUE
   );
   
   CREATE TABLE IF NOT EXISTS DESCUENTOS (
   ID_DESCUENTO INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   Nombre_descuento FLOAT(10) NOT NULL UNIQUE,
   Valor_descuento VARCHAR(40) NOT NULL UNIQUE,
   ID_FACTURA INT NOT NULL UNIQUE,
   ID_CLIENTE INT NOT NULL UNIQUE,
   FOREIGN KEY (ID_FACTURA)
   REFERENCES FACTURAS(ID_FACTURA)
   ON DELETE CASCADE
   ON UPDATE CASCADE,
   FOREIGN KEY (ID_CLIENTE)
   REFERENCES CLIENTES(ID_CLIENTE)
   ON DELETE CASCADE 
   ON UPDATE CASCADE
   );
   
   CREATE TABLE IF NOT EXISTS EMPLEADOS (
   ID_EMPLEADO INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   Nombre VARCHAR(30) NOT NULL,
   Apellido VARCHAR(30) NOT NULL,
   Telefono_empleado INT NOT NULL UNIQUE,
   Email_empleado VARCHAR(30) NOT NULL UNIQUE
   );
   
   CREATE TABLE IF NOT EXISTS EXPERIENCIA_DEL_CLIENTE (
   ID_EXPERIENCIA INT NOT NULL UNIQUE AUTO_INCREMENT PRIMARY KEY,
   ID_CLIENTE INT NOT NULL,
   Fecha_comentario DATE NOT NULL,
   Comentario VARCHAR(300) NULL,
   Calificacion INT NULL,
   FOREIGN KEY(ID_CLIENTE)
   REFERENCES CLIENTES(ID_CLIENTE)
   ON DELETE CASCADE
   ON UPDATE CASCADE
   );
   

   
   